# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    paths:
    - '.github/workflows/travel-service.yml'
    - 'travel-service/**'
     

     
       
 
jobs:
  build-test:

    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        dir:
#          - travel-service
#          - account-service


    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file travel-service/pom.xml
      
    - name: Test with Maven
      run: cd travel-service && mvn test
#      working-directory: ${{ matrix.dir }}
   
  qodana:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with: 
         ref: ${{ github.event.pull_request.head.sha}}
         fetch-depth: 0
      - name: 'Qodana scan'
        uses: JetBrains/qodana-action@v2022.2.3
        env:
         QODANA_TOKEN: ${{secrets.QODANA_TOKEN}}

  docker:
   needs: [ qodana ]
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Building an image
      run: |
        cd travel-service
        docker build -t travel-service .
    - name: Tag the image
      run: |
        docker tag post-service:latest ${{ secrets.DOCKER_USERNAME }}/green-connect:travel-service-latest
    - name: Push the image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/green-connect:travel-service-latest
   
    
